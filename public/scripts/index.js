// Generated by CoffeeScript 2.2.1
(function() {
  var buildPage, getFeed, getFollowees, getFollowers, username;

  username = '';

  $(document).ready(function() {
    var loginData, now, twoHours;
    if (localStorage.getItem('stwitter-login') !== null) {
      loginData = $.parseJSON(localStorage.getItem('stwitter-login'));
      // 2 hours in milliseconds
      twoHours = 1000 * 60 * 60 * 2;
      now = new Date().getTime();
      if (loginData.date && now - loginData.date < twoHours) {
        username = loginData.username;
        getFeed();
        getFollowers();
        getFollowees();
      } else {
        window.location = '/login';
      }
    } else {
      window.location = '/login';
    }
  });

  this.tweet = function() {
    var message;
    message = document.getElementById('tweet-message').value;
    if (message != null) {
      $.ajax({
        'async': true,
        'crossDomain': true,
        'headers': {
          'username': username,
          'user_message': message
        },
        type: 'POST',
        url: '/users/addTweet',
        success: () => {
          document.getElementById('tweet-message').value = '';
          getFeed();
        }
      });
    }
  };

  this.follow = function() {
    var followee;
    followee = document.getElementById('new-follow-input').value;
    if (followee != null) {
      $.ajax({
        'async': true,
        'crossDomain': true,
        'headers': {
          'follower': username,
          'followee': followee
        },
        type: 'POST',
        url: '/users/followUser',
        success: () => {
          document.getElementById('new-follow-input').value = '';
          getFeed();
        }
      });
    }
  };

  getFeed = function() {
    $.ajax({
      'async': true,
      'crossDomain': true,
      'headers': {
        'username': username
      },
      type: 'GET',
      url: '/users/getTimeline',
      success: (response) => {
        buildPage(response);
      }
    });
  };

  getFollowers = function() {
    $.ajax({
      'async': true,
      'crossDomain': true,
      'headers': {
        'username': username
      },
      type: 'GET',
      url: '/users/getUsersFollowing',
      success: (response) => {
        var followerHtml;
        followerHtml = '';
        response[0].forEach((follower) => {
          console.log(follower);
          followerHtml += '' + '<li class="follower">' + follower['follower'] + '</li>';
        });
        document.getElementById('followers-list').innerHTML = followerHtml;
      }
    });
  };

  getFollowees = function() {
    $.ajax({
      'async': true,
      'crossDomain': true,
      'headers': {
        'username': username
      },
      type: 'GET',
      url: '/users/getUsersFollowers',
      success: (response) => {
        var followeeHtml;
        console.log(response);
        followeeHtml = '';
        response[0].forEach((followee) => {
          followeeHtml += '' + '<li class="follower">' + followee['followee'] + '</li>';
        });
        document.getElementById('following-list').innerHTML = followeeHtml;
      }
    });
  };

  this.favTweet = function(tId) {
    $.ajax({
      'async': true,
      'crossDomain': true,
      'headers': {
        'username': username,
        'tweet_id': tId
      },
      type: 'POST',
      url: '/users/favoriteTweet',
      success: (response) => {
        console.log(response);
      }
    });
  };

  this.reTweet = function(tweet, tId) {
    $.ajax({
      'async': true,
      'crossDomain': true,
      'headers': {
        'username': username,
        'tweet_id': tId,
        'message': this.getElementsByClassName('tweet-message')[0].innerHTML,
        'original_user': this.getElementsByClassName('tweet-author')[0].innerHTML
      },
      type: 'POST',
      url: '/users/retweetTweet',
      success: () => {
        getFeed();
      }
    });
  };

  buildPage = function(feedData) {
    var feed, tweets;
    tweets = feedData[0];
    feed = document.getElementById('main');
    if (tweets.length) {
      return tweets.forEach((tweet) => {
        var tweetHTML;
        tweetHTML = '' + '<div class="tweet card">' + ' <p class="tweet-message">' + tweet['message'] + '</p>' + ' <p class="tweet-author">' + tweet['currentuser'] + '</p>' + ' <button class="retweet-button" onclick="reTweet(this, ' + tweet['tId'] + ')">retweet</button>' + ' <button class="retweet-button" onclick="favTweet(' + tweet['tId'] + ')">fav</button>' + '</div>';
        return feed.innerHTML += tweetHTML;
      });
    } else {
      return $(feed).html("<h1>Your feed Is Empty!</h1><p>Follow someone or make a tweet to see stuff here</p>");
    }
  };

}).call(this);

//# sourceMappingURL=index.js.map
